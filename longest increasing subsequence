def longest_increasing_subsequence(nums):
n = len(nums)
        dp = [1] * n
        for i in range(1, n):
            for j in range(i):
                if nums[i] > nums[j]:
                    dp[i] = max(dp[i], dp[j] + 1)
        return max(dp)
nums=10,22,0,33,4,50,41,89
result=longest_increasing_subsequence(nums)
print(result)

#memo
def longest_increasing_subsequence(nums):
    memo={}
    def helper(i):
        if i in memo:
            return memo[i]
        length=1
        for j in range(i):
            if nums[i]>nums[j]:
                length=max(length,helper(j)+1)
        memo[i]=length
        return length
    max_length=0
    for i in range(len(nums)):
        max_length=max(max_length,helper(i))
    return max_length
nums=[10,22,9,33,21,50,41,60,80]
result=longest_increasing_subsequence(nums)
print(result)

